<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentTypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAQAAAAAAAAAAAAAAAEAAAAA
        AAAAAAAALeDaAEzo4gCa8u4AmfDtAHHr5gC19PIAZOjjAABcWAAAd3MAAAcHAAAiIgBZ5+IAWOfhAAnb
        1AAA3tUAdevnAHTr5gCt8/EACOLaAACtpgBc5+IAAHNwAKHy7wB46+cAd+vmAADa0gANtbAAlO/sAAB6
        dwAAlZIAie7rAIju6gA44twAAHFtAKTy7wCj8u4AVObhAHDq5gAf3tcAZOnkABTd1gAHPTsAAF1ZADvi
        3AAAsKoAAJOPAIDt6QBY5uIAAN/WAACKhQBM5eAAc+rmAAAPDwC39fIAaOnlAI/u6wBn6eQAFt3VAFzo
        4wAAycIAg+3pAJ/x7gAA29MAk/DsAEPk3gAOko0AsfbzAK/08QCu9PAAh+3qAIbt6QAP3NUAAAICAHvs
        6AAq4NkAJ9zWAEfk3wAf39gAjO/sALP08gCy9PEAAHl1AGLo4wA649wAfuzoAAEAAAAH29QALuDaAHPr
        5wCa8O0AcuvmAEnk3gC29PIAPuPdAKrz8ABb5+MAWufiAADc1AAAbGgAduvnAHXr5gCS7+wAaurlAJHv
        6wCu8/EAAAMDAABWVACi8u8AUubhAFHm4AAA2tEAABUUAJbv7QBt6uUAAV9cAIru6wAAenYAYunkAAAK
        CgCJ7uoAOuLdAH7t6QCl8u8AAFRRAFXm4QBJ5d8AZenkABXd1gAAW1gAqfLwAIHt6QAA3dUAAKWfAE3l
        4ABp6eUAAGJfAGjp5ACE7ekABuHYAAB0cAAF39cAH5eTAHns6ACg8e4AeOznAFDl4AAA29IAAE5LAABp
        ZgAAhIEAlfDtALz18wBF5N8AbOnlAETk3gAAe3cAiO3qAGDo4wAAVVIAK+DZAAkREQCY8O0AcOvmAJfw
        7ABI5N8AtPTyADzj3QAAXFkAAJKPAFjn4gB06+cAG+DaAAArKgCQ7+wArPPxAKvz8AAAWlYAAHVxAFvn
        4gB36+cAANrTAETl3wCT7+wAa+rlAGrq5ACv8/EAhu7pADfi3ACl9PEAAB4dAKPy7wAD2tMAHt7XAGPp
        5AAAXVoAAJOQADri3AAS3dUAp/LwAH/t6QCm8u8AV+biAC/h2wBW5uEAAN/XAEvl4ABK5d8AId7XAGfp
        5QAAdnIAAJGNAAAGBgCC7ekAnvHuAADb1ABO5eAAuvXzAGrp5QAA0soAAGJeADfj3QCG7eoAXujjAACN
        igDK+PYAeuzoACrg2gAp4NkACNbPAJjy7wAA2dEAAGllAACEgACW8O0AlfDsAEbk3wAAe3YAsfTxAABe
        WwA6490AYejjAFXn4QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAGpJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANXyUlJSUfIitAAAAfJSUlMNj1AAA
        AAiUlJSUa+giAAATExMTExMTUq0AAKUTExPNzSKtAAAbFB7TlpwJ6JwAABMTExMTExOcrQAADhMTExMT
        YwkAAEgTExMTExPp6QAAExMTExMTE+kLAAATExMTExMinAAAExMTExMTE+kdAAATExMTExMTnAsAABMT
        ExMTEy11AAATExMTExMT6SIAABMTExMTExOccAA7ExMTExMTE3UAABMTExMTExPpiAAAExMTExMTE5w1
        AKUTExMTExMTUgAAixMTExMTE5yUAAATExMTExMTnAoADhMTExMTExPSrQDNExMTExMTnJQAAM0TExMT
        ExMJ1ADNExMTExMTE4hjAM0TExMTExPSrQAAzc3Nzc3NzQlqAM3Nzc3Nzc3NFmMAzc3NExPNE4ytAACE
        hISEMc3N0kk7zc3Nzc3Nzc0t3ACEzc3Nzc3NjK0AAGJiYmJiYmIiAKWEYmJihISEhM3DANeEhISEhISM
        vgAAGrW1tbU/P+gAVz8/Pz8/Pz8/DysAGj/X19fX1xa+AAAaGhoaGhoa3AAaGhoaGo0aGhoaqK3nGhoa
        GhoaFnAAABoaGhoaGhrvVhoaGhrNTBoaGhp8w5MaGhoaGhqMNQAAGhoaGhoaGqgqGhoaGjyOGhoaGmPc
        YhoaGhoaGrIKAAAaGhoaGhoaCEIaGhoa7aEaGhoaLcM/GhoaGhoa0tQAAA4aGhoaGhqoixoaGhprABoa
        GhrNK5MaGhoaGhoJagAAKSkaGhoaGqg/GhoaGoEAGhoaGoSoGhoaGhoaGlJJAAAnwcHAGhoasRoaGhox
        iAAaGhoaGqgaGhoaGhoaUgAAAAFL4+SgGj9zGhoaGtuUADoaGhoanxoaGhoaGhqcAAAALCEhvLy83Rsa
        GhoaMncApRoaGhpjGhoaGkhYAekAAABcTezsmZu2E0FBQU6VAAA7GhoabxSAxad58FQs0wAAAA3MfX0l
        JX22bW5u8nUAAACShjMzrNjPz35+pc7EAAAAiX9/ByjCdlPx8Z4ClgAAAN87FbOzYQwMqjDKYC4AAAAZ
        ZRGrWTRbWwWjJuUdAAAAXpq4uGe5hzc30TlyLgAAAN6Kij091dWDLy/IhQsAAADGSkrij4+RGLS0ZHrE
        AAAA60C3ZmZoaK6uODjgAAAAAMt0dB94IJ1GRrtHTy4AAAAkbBcXF5A+PtbWe6kAAAAAqloEoqKkpOpx
        l+sDxAAAAO5EurppaRKvr7DmHgAAAAAAgsfJyXt7eyMjv72pAAAAU9oQVR8cPl9F7tAAAAAAAADhmNk2
        XQamUFFRQx4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>